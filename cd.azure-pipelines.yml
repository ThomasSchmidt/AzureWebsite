name: 'CD'

# this is being defined in app-ci pipeline
resources:
  pipelines:
  - pipeline: CI
    source: CI
    trigger: 
      branches:
        include: 
        - master
        exclude:
        - feature/*
pool:
  vmImage: 'ubuntu-20.04'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  webArtifactName: 'azure-website'
  # enables debug output
  system.debug: true

stages:
- stage: 'stage_build'
  displayName: 'build'
  jobs:
  - job: 'build'
    steps:
    - task: UseDotNet@2
      displayName: 'Use .net 8.0 sdk'
      name: 'use_sdk'
      inputs:
          version: '8.0.x'
          packageType: 'sdk'
          includePreviewVersions: true

    - task: DotNetCoreCLI@2
      name: 'run_build'
      displayName: 'build solution'
      inputs:
       command: 'build'
       arguments: '-c $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      name: 'publish_website'
      displayName: 'publish website'
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '-c $(buildConfiguration) -o $(Build.ArtifactStagingDirectory) -r linux-x64 --self-contained true'
        zipAfterPublish: true
        modifyOutputPath: false

    - task: PublishPipelineArtifact@1
      name: 'publish_pipeline_artifacts'
      displayName: 'publish pipeline artifacts'
      inputs:
        artifact: '$(webArtifactName)'
        targetPath: '$(Build.ArtifactStagingDirectory)'

- stage: 'stage_test'
  displayName: 'run tests'
  dependsOn:
  - 'stage_build'
  jobs:
    - job: 'test'
      steps:
        - task: UseDotNet@2
          displayName: 'Use .net 8.0 sdk'
          name: 'use_sdk'
          inputs:
            version: '8.0.x'
            packageType: 'sdk'
            includePreviewVersions: true

        #- task: DownloadPipelineArtifact@2
        #  inputs:
        #    buildType: 'current'
        #    artifactName: '$(webArtifactName)'
        #    targetPath: '$(Pipeline.Workspace)/website-artifact'
        - task: DotNetCoreCLI@2
          name: 'run_test'
          displayName: 'run tests'
          inputs:
            command: 'test'
            arguments: '--collect:"XPlat Code Coverage"'

- stage: 'stage_deploy_production'
  dependsOn: 
  - 'stage_build'
  - 'stage_test'
  displayName: 'deploy production stage'
  jobs:
  - deployment: 'deploy_schmidt_production'
    environment: 'production'
    variables:
      WebAppName: 'schmidt'
    pool: 
      vmImage: 'ubuntu-latest'
    displayName: 'Deploy production'
    strategy:
     runOnce:
       deploy:
        steps:
          - task: AzureRmWebAppDeployment@4
            displayName: 'schmidt app service deploy'
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Pay-As-You-Go (4ef5cf54-1584-409a-aff2-01c917c56340)'
              appType: 'webAppLinux'
              WebAppName: '$(WebAppName)'
              packageForLinux: '$(System.WorkFolder)/**/*.zip'
              RuntimeStack: 'DOTNETCORE|LTS'
